#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.3634
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataEntity
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="landrover")]
	public partial class LandRoverDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertL_Administrators(L_Administrators instance);
    partial void UpdateL_Administrators(L_Administrators instance);
    partial void DeleteL_Administrators(L_Administrators instance);
    partial void InsertL_Sections(L_Sections instance);
    partial void UpdateL_Sections(L_Sections instance);
    partial void DeleteL_Sections(L_Sections instance);
    partial void InsertL_Brands(L_Brands instance);
    partial void UpdateL_Brands(L_Brands instance);
    partial void DeleteL_Brands(L_Brands instance);
    partial void InsertL_DealerAddress(L_DealerAddress instance);
    partial void UpdateL_DealerAddress(L_DealerAddress instance);
    partial void DeleteL_DealerAddress(L_DealerAddress instance);
    partial void InsertL_DealerContacts(L_DealerContacts instance);
    partial void UpdateL_DealerContacts(L_DealerContacts instance);
    partial void DeleteL_DealerContacts(L_DealerContacts instance);
    partial void InsertL_Models(L_Models instance);
    partial void UpdateL_Models(L_Models instance);
    partial void DeleteL_Models(L_Models instance);
    partial void InsertL_Permissions(L_Permissions instance);
    partial void UpdateL_Permissions(L_Permissions instance);
    partial void DeleteL_Permissions(L_Permissions instance);
    partial void InsertL_Roles(L_Roles instance);
    partial void UpdateL_Roles(L_Roles instance);
    partial void DeleteL_Roles(L_Roles instance);
    partial void InsertNSD_Brands(NSD_Brands instance);
    partial void UpdateNSD_Brands(NSD_Brands instance);
    partial void DeleteNSD_Brands(NSD_Brands instance);
    partial void InsertNSD_User(NSD_User instance);
    partial void UpdateNSD_User(NSD_User instance);
    partial void DeleteNSD_User(NSD_User instance);
    partial void InsertNSD_Info(NSD_Info instance);
    partial void UpdateNSD_Info(NSD_Info instance);
    partial void DeleteNSD_Info(NSD_Info instance);
    partial void InsertNSD_KMI(NSD_KMI instance);
    partial void UpdateNSD_KMI(NSD_KMI instance);
    partial void DeleteNSD_KMI(NSD_KMI instance);
    partial void InsertNSD_MapData(NSD_MapData instance);
    partial void UpdateNSD_MapData(NSD_MapData instance);
    partial void DeleteNSD_MapData(NSD_MapData instance);
    partial void InsertNSD_Score(NSD_Score instance);
    partial void UpdateNSD_Score(NSD_Score instance);
    partial void DeleteNSD_Score(NSD_Score instance);
    partial void InsertR_HelloEvoque(R_HelloEvoque instance);
    partial void UpdateR_HelloEvoque(R_HelloEvoque instance);
    partial void DeleteR_HelloEvoque(R_HelloEvoque instance);
    #endregion
		
		public LandRoverDBDataContext() :
        base(global::System.Configuration.ConfigurationManager.ConnectionStrings["landroverConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LandRoverDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LandRoverDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LandRoverDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LandRoverDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<L_Administrators> L_Administrators
		{
			get
			{
				return this.GetTable<L_Administrators>();
			}
		}
		
		public System.Data.Linq.Table<L_Sections> L_Sections
		{
			get
			{
				return this.GetTable<L_Sections>();
			}
		}
		
		public System.Data.Linq.Table<L_Brands> L_Brands
		{
			get
			{
				return this.GetTable<L_Brands>();
			}
		}
		
		public System.Data.Linq.Table<L_DealerAddress> L_DealerAddress
		{
			get
			{
				return this.GetTable<L_DealerAddress>();
			}
		}
		
		public System.Data.Linq.Table<L_DealerContacts> L_DealerContacts
		{
			get
			{
				return this.GetTable<L_DealerContacts>();
			}
		}
		
		public System.Data.Linq.Table<L_Dealers> L_Dealers
		{
			get
			{
				return this.GetTable<L_Dealers>();
			}
		}
		
		public System.Data.Linq.Table<L_DealerType> L_DealerType
		{
			get
			{
				return this.GetTable<L_DealerType>();
			}
		}
		
		public System.Data.Linq.Table<L_Models> L_Models
		{
			get
			{
				return this.GetTable<L_Models>();
			}
		}
		
		public System.Data.Linq.Table<L_Permissions> L_Permissions
		{
			get
			{
				return this.GetTable<L_Permissions>();
			}
		}
		
		public System.Data.Linq.Table<L_Roles> L_Roles
		{
			get
			{
				return this.GetTable<L_Roles>();
			}
		}
		
		public System.Data.Linq.Table<NSD_Brands> NSD_Brands
		{
			get
			{
				return this.GetTable<NSD_Brands>();
			}
		}
		
		public System.Data.Linq.Table<NSD_User> NSD_User
		{
			get
			{
				return this.GetTable<NSD_User>();
			}
		}
		
		public System.Data.Linq.Table<NSD_Info> NSD_Info
		{
			get
			{
				return this.GetTable<NSD_Info>();
			}
		}
		
		public System.Data.Linq.Table<NSD_KMI> NSD_KMI
		{
			get
			{
				return this.GetTable<NSD_KMI>();
			}
		}
		
		public System.Data.Linq.Table<NSD_MapData> NSD_MapData
		{
			get
			{
				return this.GetTable<NSD_MapData>();
			}
		}
		
		public System.Data.Linq.Table<NSD_Models> NSD_Models
		{
			get
			{
				return this.GetTable<NSD_Models>();
			}
		}
		
		public System.Data.Linq.Table<NSD_Score> NSD_Score
		{
			get
			{
				return this.GetTable<NSD_Score>();
			}
		}
		
		public System.Data.Linq.Table<R_HelloEvoque> R_HelloEvoque
		{
			get
			{
				return this.GetTable<R_HelloEvoque>();
			}
		}
	}
	
	[Table(Name="dbo.L_Administrators")]
	public partial class L_Administrators : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Username;
		
		private string _Password;
		
		private string _Email;
		
		private int _RoleID;
		
		private string _DisplayName;
		
		private int _DealerID;
		
		private System.DateTime _AddTime;
		
		private System.DateTime _LastLogin;
		
		private string _LastIP;
		
		private byte _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnDealerIDChanging(int value);
    partial void OnDealerIDChanged();
    partial void OnAddTimeChanging(System.DateTime value);
    partial void OnAddTimeChanged();
    partial void OnLastLoginChanging(System.DateTime value);
    partial void OnLastLoginChanged();
    partial void OnLastIPChanging(string value);
    partial void OnLastIPChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public L_Administrators()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[Column(Storage="_Password", DbType="Char(40) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[Column(Storage="_DisplayName", DbType="NVarChar(50)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[Column(Storage="_DealerID", DbType="Int NOT NULL")]
		public int DealerID
		{
			get
			{
				return this._DealerID;
			}
			set
			{
				if ((this._DealerID != value))
				{
					this.OnDealerIDChanging(value);
					this.SendPropertyChanging();
					this._DealerID = value;
					this.SendPropertyChanged("DealerID");
					this.OnDealerIDChanged();
				}
			}
		}
		
		[Column(Storage="_AddTime", DbType="DateTime NOT NULL")]
		public System.DateTime AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this.OnAddTimeChanging(value);
					this.SendPropertyChanging();
					this._AddTime = value;
					this.SendPropertyChanged("AddTime");
					this.OnAddTimeChanged();
				}
			}
		}
		
		[Column(Storage="_LastLogin", DbType="DateTime NOT NULL")]
		public System.DateTime LastLogin
		{
			get
			{
				return this._LastLogin;
			}
			set
			{
				if ((this._LastLogin != value))
				{
					this.OnLastLoginChanging(value);
					this.SendPropertyChanging();
					this._LastLogin = value;
					this.SendPropertyChanged("LastLogin");
					this.OnLastLoginChanged();
				}
			}
		}
		
		[Column(Storage="_LastIP", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string LastIP
		{
			get
			{
				return this._LastIP;
			}
			set
			{
				if ((this._LastIP != value))
				{
					this.OnLastIPChanging(value);
					this.SendPropertyChanging();
					this._LastIP = value;
					this.SendPropertyChanged("LastIP");
					this.OnLastIPChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.L_Sections")]
	public partial class L_Sections : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _SectionName;
		
		private string _Identification;
		
		private byte _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSectionNameChanging(string value);
    partial void OnSectionNameChanged();
    partial void OnIdentificationChanging(string value);
    partial void OnIdentificationChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public L_Sections()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_SectionName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SectionName
		{
			get
			{
				return this._SectionName;
			}
			set
			{
				if ((this._SectionName != value))
				{
					this.OnSectionNameChanging(value);
					this.SendPropertyChanging();
					this._SectionName = value;
					this.SendPropertyChanged("SectionName");
					this.OnSectionNameChanged();
				}
			}
		}
		
		[Column(Storage="_Identification", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Identification
		{
			get
			{
				return this._Identification;
			}
			set
			{
				if ((this._Identification != value))
				{
					this.OnIdentificationChanging(value);
					this.SendPropertyChanging();
					this._Identification = value;
					this.SendPropertyChanged("Identification");
					this.OnIdentificationChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.L_Brands")]
	public partial class L_Brands : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _BrandName;
		
		private byte _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBrandNameChanging(string value);
    partial void OnBrandNameChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public L_Brands()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_BrandName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this.OnBrandNameChanging(value);
					this.SendPropertyChanging();
					this._BrandName = value;
					this.SendPropertyChanged("BrandName");
					this.OnBrandNameChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.L_DealerAddress")]
	public partial class L_DealerAddress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _DealerID;
		
		private int _DealerType;
		
		private string _Address;
		
		private string _AddressEn;
		
		private string _Zip;
		
		private string _Telephone;
		
		private string _Fax;
		
		private byte _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDealerIDChanging(int value);
    partial void OnDealerIDChanged();
    partial void OnDealerTypeChanging(int value);
    partial void OnDealerTypeChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnAddressEnChanging(string value);
    partial void OnAddressEnChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public L_DealerAddress()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_DealerID", DbType="Int NOT NULL")]
		public int DealerID
		{
			get
			{
				return this._DealerID;
			}
			set
			{
				if ((this._DealerID != value))
				{
					this.OnDealerIDChanging(value);
					this.SendPropertyChanging();
					this._DealerID = value;
					this.SendPropertyChanged("DealerID");
					this.OnDealerIDChanged();
				}
			}
		}
		
		[Column(Storage="_DealerType", DbType="Int NOT NULL")]
		public int DealerType
		{
			get
			{
				return this._DealerType;
			}
			set
			{
				if ((this._DealerType != value))
				{
					this.OnDealerTypeChanging(value);
					this.SendPropertyChanging();
					this._DealerType = value;
					this.SendPropertyChanged("DealerType");
					this.OnDealerTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Address", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[Column(Storage="_AddressEn", DbType="VarChar(200)")]
		public string AddressEn
		{
			get
			{
				return this._AddressEn;
			}
			set
			{
				if ((this._AddressEn != value))
				{
					this.OnAddressEnChanging(value);
					this.SendPropertyChanging();
					this._AddressEn = value;
					this.SendPropertyChanged("AddressEn");
					this.OnAddressEnChanged();
				}
			}
		}
		
		[Column(Storage="_Zip", DbType="VarChar(10)")]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[Column(Storage="_Telephone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="VarChar(50)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.L_DealerContacts")]
	public partial class L_DealerContacts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _DealerID;
		
		private string _Name;
		
		private string _Position;
		
		private string _Telephone;
		
		private string _Mobile;
		
		private string _Email;
		
		private byte _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDealerIDChanging(int value);
    partial void OnDealerIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public L_DealerContacts()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_DealerID", DbType="Int NOT NULL")]
		public int DealerID
		{
			get
			{
				return this._DealerID;
			}
			set
			{
				if ((this._DealerID != value))
				{
					this.OnDealerIDChanging(value);
					this.SendPropertyChanging();
					this._DealerID = value;
					this.SendPropertyChanged("DealerID");
					this.OnDealerIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_Position", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[Column(Storage="_Telephone", DbType="VarChar(100)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[Column(Storage="_Mobile", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.L_Dealers")]
	public partial class L_Dealers
	{
		
		private int _ID;
		
		private string _DealerName;
		
		private string _DealerNameEn;
		
		private string _DMSCode;
		
		private int _ProvinceID;
		
		private int _CityID;
		
		private string _CityName;
		
		private bool _LRSeller;
		
		private bool _JGSeller;
		
		private string _DealerGroup;
		
		private string _Fax;
		
		private string _Hotline;
		
		private System.DateTime _AddTime;
		
		private System.DateTime _LastModify;
		
		private byte _Status;
		
		public L_Dealers()
		{
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_DealerName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string DealerName
		{
			get
			{
				return this._DealerName;
			}
			set
			{
				if ((this._DealerName != value))
				{
					this._DealerName = value;
				}
			}
		}
		
		[Column(Storage="_DealerNameEn", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string DealerNameEn
		{
			get
			{
				return this._DealerNameEn;
			}
			set
			{
				if ((this._DealerNameEn != value))
				{
					this._DealerNameEn = value;
				}
			}
		}
		
		[Column(Storage="_DMSCode", DbType="VarChar(10)")]
		public string DMSCode
		{
			get
			{
				return this._DMSCode;
			}
			set
			{
				if ((this._DMSCode != value))
				{
					this._DMSCode = value;
				}
			}
		}
		
		[Column(Storage="_ProvinceID", DbType="Int NOT NULL")]
		public int ProvinceID
		{
			get
			{
				return this._ProvinceID;
			}
			set
			{
				if ((this._ProvinceID != value))
				{
					this._ProvinceID = value;
				}
			}
		}
		
		[Column(Storage="_CityID", DbType="Int NOT NULL")]
		public int CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					this._CityID = value;
				}
			}
		}
		
		[Column(Storage="_CityName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CityName
		{
			get
			{
				return this._CityName;
			}
			set
			{
				if ((this._CityName != value))
				{
					this._CityName = value;
				}
			}
		}
		
		[Column(Storage="_LRSeller", DbType="Bit NOT NULL")]
		public bool LRSeller
		{
			get
			{
				return this._LRSeller;
			}
			set
			{
				if ((this._LRSeller != value))
				{
					this._LRSeller = value;
				}
			}
		}
		
		[Column(Storage="_JGSeller", DbType="Bit NOT NULL")]
		public bool JGSeller
		{
			get
			{
				return this._JGSeller;
			}
			set
			{
				if ((this._JGSeller != value))
				{
					this._JGSeller = value;
				}
			}
		}
		
		[Column(Storage="_DealerGroup", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DealerGroup
		{
			get
			{
				return this._DealerGroup;
			}
			set
			{
				if ((this._DealerGroup != value))
				{
					this._DealerGroup = value;
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this._Fax = value;
				}
			}
		}
		
		[Column(Storage="_Hotline", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Hotline
		{
			get
			{
				return this._Hotline;
			}
			set
			{
				if ((this._Hotline != value))
				{
					this._Hotline = value;
				}
			}
		}
		
		[Column(Storage="_AddTime", DbType="DateTime NOT NULL")]
		public System.DateTime AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this._AddTime = value;
				}
			}
		}
		
		[Column(Storage="_LastModify", DbType="DateTime NOT NULL")]
		public System.DateTime LastModify
		{
			get
			{
				return this._LastModify;
			}
			set
			{
				if ((this._LastModify != value))
				{
					this._LastModify = value;
				}
			}
		}
		
		[Column(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.L_DealerType")]
	public partial class L_DealerType
	{
		
		private int _ID;
		
		private string _DealerType;
		
		private byte _Status;
		
		public L_DealerType()
		{
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_DealerType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DealerType
		{
			get
			{
				return this._DealerType;
			}
			set
			{
				if ((this._DealerType != value))
				{
					this._DealerType = value;
				}
			}
		}
		
		[Column(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.L_Models")]
	public partial class L_Models : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _BrandID;
		
		private string _ModelName;
		
		private bool _ForTestDrive;
		
		private bool _Manual;
		
		private byte _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBrandIDChanging(int value);
    partial void OnBrandIDChanged();
    partial void OnModelNameChanging(string value);
    partial void OnModelNameChanged();
    partial void OnForTestDriveChanging(bool value);
    partial void OnForTestDriveChanged();
    partial void OnManualChanging(bool value);
    partial void OnManualChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public L_Models()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_BrandID", DbType="Int NOT NULL")]
		public int BrandID
		{
			get
			{
				return this._BrandID;
			}
			set
			{
				if ((this._BrandID != value))
				{
					this.OnBrandIDChanging(value);
					this.SendPropertyChanging();
					this._BrandID = value;
					this.SendPropertyChanged("BrandID");
					this.OnBrandIDChanged();
				}
			}
		}
		
		[Column(Storage="_ModelName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ModelName
		{
			get
			{
				return this._ModelName;
			}
			set
			{
				if ((this._ModelName != value))
				{
					this.OnModelNameChanging(value);
					this.SendPropertyChanging();
					this._ModelName = value;
					this.SendPropertyChanged("ModelName");
					this.OnModelNameChanged();
				}
			}
		}
		
		[Column(Storage="_ForTestDrive", DbType="Bit NOT NULL")]
		public bool ForTestDrive
		{
			get
			{
				return this._ForTestDrive;
			}
			set
			{
				if ((this._ForTestDrive != value))
				{
					this.OnForTestDriveChanging(value);
					this.SendPropertyChanging();
					this._ForTestDrive = value;
					this.SendPropertyChanged("ForTestDrive");
					this.OnForTestDriveChanged();
				}
			}
		}
		
		[Column(Storage="_Manual", DbType="Bit NOT NULL")]
		public bool Manual
		{
			get
			{
				return this._Manual;
			}
			set
			{
				if ((this._Manual != value))
				{
					this.OnManualChanging(value);
					this.SendPropertyChanging();
					this._Manual = value;
					this.SendPropertyChanged("Manual");
					this.OnManualChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.L_Permissions")]
	public partial class L_Permissions : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _RoleID;
		
		private int _SectionID;
		
		private byte _Access;
		
		private byte _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnSectionIDChanging(int value);
    partial void OnSectionIDChanged();
    partial void OnAccessChanging(byte value);
    partial void OnAccessChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public L_Permissions()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[Column(Storage="_SectionID", DbType="Int NOT NULL")]
		public int SectionID
		{
			get
			{
				return this._SectionID;
			}
			set
			{
				if ((this._SectionID != value))
				{
					this.OnSectionIDChanging(value);
					this.SendPropertyChanging();
					this._SectionID = value;
					this.SendPropertyChanged("SectionID");
					this.OnSectionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Access", DbType="TinyInt NOT NULL")]
		public byte Access
		{
			get
			{
				return this._Access;
			}
			set
			{
				if ((this._Access != value))
				{
					this.OnAccessChanging(value);
					this.SendPropertyChanging();
					this._Access = value;
					this.SendPropertyChanged("Access");
					this.OnAccessChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.L_Roles")]
	public partial class L_Roles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _RoleName;
		
		private byte _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public L_Roles()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_RoleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.NSD_Brands")]
	public partial class NSD_Brands : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _BrandName;
		
		private byte _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBrandNameChanging(string value);
    partial void OnBrandNameChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public NSD_Brands()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_BrandName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this.OnBrandNameChanging(value);
					this.SendPropertyChanging();
					this._BrandName = value;
					this.SendPropertyChanged("BrandName");
					this.OnBrandNameChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.NSD_User")]
	public partial class NSD_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _UTitle;
		
		private string _UName;
		
		private string _UEmail;
		
		private string _UPass;
		
		private System.DateTime _UBirth;
		
		private string _UProvince;
		
		private string _UCity;
		
		private string _UMobile;
		
		private int _UScore;
		
		private int _UTime;
		
		private int _UPlay;
		
		private string _Weibo;
		
		private string _Choose;
		
		private System.DateTime _AddTime;
		
		private string _HostAddress;
		
		private byte _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnUTitleChanging(string value);
    partial void OnUTitleChanged();
    partial void OnUNameChanging(string value);
    partial void OnUNameChanged();
    partial void OnUEmailChanging(string value);
    partial void OnUEmailChanged();
    partial void OnUPassChanging(string value);
    partial void OnUPassChanged();
    partial void OnUBirthChanging(System.DateTime value);
    partial void OnUBirthChanged();
    partial void OnUProvinceChanging(string value);
    partial void OnUProvinceChanged();
    partial void OnUCityChanging(string value);
    partial void OnUCityChanged();
    partial void OnUMobileChanging(string value);
    partial void OnUMobileChanged();
    partial void OnUScoreChanging(int value);
    partial void OnUScoreChanged();
    partial void OnUTimeChanging(int value);
    partial void OnUTimeChanged();
    partial void OnUPlayChanging(int value);
    partial void OnUPlayChanged();
    partial void OnWeiboChanging(string value);
    partial void OnWeiboChanged();
    partial void OnChooseChanging(string value);
    partial void OnChooseChanged();
    partial void OnAddTimeChanging(System.DateTime value);
    partial void OnAddTimeChanged();
    partial void OnHostAddressChanging(string value);
    partial void OnHostAddressChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public NSD_User()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_UTitle", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UTitle
		{
			get
			{
				return this._UTitle;
			}
			set
			{
				if ((this._UTitle != value))
				{
					this.OnUTitleChanging(value);
					this.SendPropertyChanging();
					this._UTitle = value;
					this.SendPropertyChanged("UTitle");
					this.OnUTitleChanged();
				}
			}
		}
		
		[Column(Storage="_UName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UName
		{
			get
			{
				return this._UName;
			}
			set
			{
				if ((this._UName != value))
				{
					this.OnUNameChanging(value);
					this.SendPropertyChanging();
					this._UName = value;
					this.SendPropertyChanged("UName");
					this.OnUNameChanged();
				}
			}
		}
		
		[Column(Storage="_UEmail", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string UEmail
		{
			get
			{
				return this._UEmail;
			}
			set
			{
				if ((this._UEmail != value))
				{
					this.OnUEmailChanging(value);
					this.SendPropertyChanging();
					this._UEmail = value;
					this.SendPropertyChanged("UEmail");
					this.OnUEmailChanged();
				}
			}
		}
		
		[Column(Storage="_UPass", DbType="Char(40) NOT NULL", CanBeNull=false)]
		public string UPass
		{
			get
			{
				return this._UPass;
			}
			set
			{
				if ((this._UPass != value))
				{
					this.OnUPassChanging(value);
					this.SendPropertyChanging();
					this._UPass = value;
					this.SendPropertyChanged("UPass");
					this.OnUPassChanged();
				}
			}
		}
		
		[Column(Storage="_UBirth", DbType="DateTime NOT NULL")]
		public System.DateTime UBirth
		{
			get
			{
				return this._UBirth;
			}
			set
			{
				if ((this._UBirth != value))
				{
					this.OnUBirthChanging(value);
					this.SendPropertyChanging();
					this._UBirth = value;
					this.SendPropertyChanged("UBirth");
					this.OnUBirthChanged();
				}
			}
		}
		
		[Column(Storage="_UProvince", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UProvince
		{
			get
			{
				return this._UProvince;
			}
			set
			{
				if ((this._UProvince != value))
				{
					this.OnUProvinceChanging(value);
					this.SendPropertyChanging();
					this._UProvince = value;
					this.SendPropertyChanged("UProvince");
					this.OnUProvinceChanged();
				}
			}
		}
		
		[Column(Storage="_UCity", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UCity
		{
			get
			{
				return this._UCity;
			}
			set
			{
				if ((this._UCity != value))
				{
					this.OnUCityChanging(value);
					this.SendPropertyChanging();
					this._UCity = value;
					this.SendPropertyChanged("UCity");
					this.OnUCityChanged();
				}
			}
		}
		
		[Column(Storage="_UMobile", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string UMobile
		{
			get
			{
				return this._UMobile;
			}
			set
			{
				if ((this._UMobile != value))
				{
					this.OnUMobileChanging(value);
					this.SendPropertyChanging();
					this._UMobile = value;
					this.SendPropertyChanged("UMobile");
					this.OnUMobileChanged();
				}
			}
		}
		
		[Column(Storage="_UScore", DbType="Int NOT NULL")]
		public int UScore
		{
			get
			{
				return this._UScore;
			}
			set
			{
				if ((this._UScore != value))
				{
					this.OnUScoreChanging(value);
					this.SendPropertyChanging();
					this._UScore = value;
					this.SendPropertyChanged("UScore");
					this.OnUScoreChanged();
				}
			}
		}
		
		[Column(Storage="_UTime", DbType="Int NOT NULL")]
		public int UTime
		{
			get
			{
				return this._UTime;
			}
			set
			{
				if ((this._UTime != value))
				{
					this.OnUTimeChanging(value);
					this.SendPropertyChanging();
					this._UTime = value;
					this.SendPropertyChanged("UTime");
					this.OnUTimeChanged();
				}
			}
		}
		
		[Column(Storage="_UPlay", DbType="Int NOT NULL")]
		public int UPlay
		{
			get
			{
				return this._UPlay;
			}
			set
			{
				if ((this._UPlay != value))
				{
					this.OnUPlayChanging(value);
					this.SendPropertyChanging();
					this._UPlay = value;
					this.SendPropertyChanged("UPlay");
					this.OnUPlayChanged();
				}
			}
		}
		
		[Column(Storage="_Weibo", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Weibo
		{
			get
			{
				return this._Weibo;
			}
			set
			{
				if ((this._Weibo != value))
				{
					this.OnWeiboChanging(value);
					this.SendPropertyChanging();
					this._Weibo = value;
					this.SendPropertyChanged("Weibo");
					this.OnWeiboChanged();
				}
			}
		}
		
		[Column(Storage="_Choose", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Choose
		{
			get
			{
				return this._Choose;
			}
			set
			{
				if ((this._Choose != value))
				{
					this.OnChooseChanging(value);
					this.SendPropertyChanging();
					this._Choose = value;
					this.SendPropertyChanged("Choose");
					this.OnChooseChanged();
				}
			}
		}
		
		[Column(Storage="_AddTime", DbType="DateTime NOT NULL")]
		public System.DateTime AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this.OnAddTimeChanging(value);
					this.SendPropertyChanging();
					this._AddTime = value;
					this.SendPropertyChanged("AddTime");
					this.OnAddTimeChanged();
				}
			}
		}
		
		[Column(Storage="_HostAddress", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string HostAddress
		{
			get
			{
				return this._HostAddress;
			}
			set
			{
				if ((this._HostAddress != value))
				{
					this.OnHostAddressChanging(value);
					this.SendPropertyChanging();
					this._HostAddress = value;
					this.SendPropertyChanged("HostAddress");
					this.OnHostAddressChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.NSD_Info")]
	public partial class NSD_Info : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UID;
		
		private string _DriverAge;
		
		private string _VehicleBrand;
		
		private string _VehicleModel;
		
		private string _Trip;
		
		private string _TripDistance;
		
		private string _WeiboFans;
		
		private string _PromoEvent;
		
		private System.DateTime _LastModify;
		
		private string _HostAddress;
		
		private byte _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnDriverAgeChanging(string value);
    partial void OnDriverAgeChanged();
    partial void OnVehicleBrandChanging(string value);
    partial void OnVehicleBrandChanged();
    partial void OnVehicleModelChanging(string value);
    partial void OnVehicleModelChanged();
    partial void OnTripChanging(string value);
    partial void OnTripChanged();
    partial void OnTripDistanceChanging(string value);
    partial void OnTripDistanceChanged();
    partial void OnWeiboFansChanging(string value);
    partial void OnWeiboFansChanged();
    partial void OnPromoEventChanging(string value);
    partial void OnPromoEventChanged();
    partial void OnLastModifyChanging(System.DateTime value);
    partial void OnLastModifyChanged();
    partial void OnHostAddressChanging(string value);
    partial void OnHostAddressChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public NSD_Info()
		{
			OnCreated();
		}
		
		[Column(Storage="_UID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[Column(Storage="_DriverAge", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string DriverAge
		{
			get
			{
				return this._DriverAge;
			}
			set
			{
				if ((this._DriverAge != value))
				{
					this.OnDriverAgeChanging(value);
					this.SendPropertyChanging();
					this._DriverAge = value;
					this.SendPropertyChanged("DriverAge");
					this.OnDriverAgeChanged();
				}
			}
		}
		
		[Column(Storage="_VehicleBrand", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string VehicleBrand
		{
			get
			{
				return this._VehicleBrand;
			}
			set
			{
				if ((this._VehicleBrand != value))
				{
					this.OnVehicleBrandChanging(value);
					this.SendPropertyChanging();
					this._VehicleBrand = value;
					this.SendPropertyChanged("VehicleBrand");
					this.OnVehicleBrandChanged();
				}
			}
		}
		
		[Column(Storage="_VehicleModel", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string VehicleModel
		{
			get
			{
				return this._VehicleModel;
			}
			set
			{
				if ((this._VehicleModel != value))
				{
					this.OnVehicleModelChanging(value);
					this.SendPropertyChanging();
					this._VehicleModel = value;
					this.SendPropertyChanged("VehicleModel");
					this.OnVehicleModelChanged();
				}
			}
		}
		
		[Column(Storage="_Trip", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Trip
		{
			get
			{
				return this._Trip;
			}
			set
			{
				if ((this._Trip != value))
				{
					this.OnTripChanging(value);
					this.SendPropertyChanging();
					this._Trip = value;
					this.SendPropertyChanged("Trip");
					this.OnTripChanged();
				}
			}
		}
		
		[Column(Storage="_TripDistance", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string TripDistance
		{
			get
			{
				return this._TripDistance;
			}
			set
			{
				if ((this._TripDistance != value))
				{
					this.OnTripDistanceChanging(value);
					this.SendPropertyChanging();
					this._TripDistance = value;
					this.SendPropertyChanged("TripDistance");
					this.OnTripDistanceChanged();
				}
			}
		}
		
		[Column(Storage="_WeiboFans", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string WeiboFans
		{
			get
			{
				return this._WeiboFans;
			}
			set
			{
				if ((this._WeiboFans != value))
				{
					this.OnWeiboFansChanging(value);
					this.SendPropertyChanging();
					this._WeiboFans = value;
					this.SendPropertyChanged("WeiboFans");
					this.OnWeiboFansChanged();
				}
			}
		}
		
		[Column(Storage="_PromoEvent", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PromoEvent
		{
			get
			{
				return this._PromoEvent;
			}
			set
			{
				if ((this._PromoEvent != value))
				{
					this.OnPromoEventChanging(value);
					this.SendPropertyChanging();
					this._PromoEvent = value;
					this.SendPropertyChanged("PromoEvent");
					this.OnPromoEventChanged();
				}
			}
		}
		
		[Column(Storage="_LastModify", DbType="DateTime NOT NULL")]
		public System.DateTime LastModify
		{
			get
			{
				return this._LastModify;
			}
			set
			{
				if ((this._LastModify != value))
				{
					this.OnLastModifyChanging(value);
					this.SendPropertyChanging();
					this._LastModify = value;
					this.SendPropertyChanged("LastModify");
					this.OnLastModifyChanged();
				}
			}
		}
		
		[Column(Storage="_HostAddress", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string HostAddress
		{
			get
			{
				return this._HostAddress;
			}
			set
			{
				if ((this._HostAddress != value))
				{
					this.OnHostAddressChanging(value);
					this.SendPropertyChanging();
					this._HostAddress = value;
					this.SendPropertyChanged("HostAddress");
					this.OnHostAddressChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.NSD_KMI")]
	public partial class NSD_KMI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Email;
		
		private string _Mobile;
		
		private System.DateTime _AddTime;
		
		private string _HostAddress;
		
		private byte _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnAddTimeChanging(System.DateTime value);
    partial void OnAddTimeChanged();
    partial void OnHostAddressChanging(string value);
    partial void OnHostAddressChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public NSD_KMI()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_Mobile", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[Column(Storage="_AddTime", DbType="DateTime NOT NULL")]
		public System.DateTime AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this.OnAddTimeChanging(value);
					this.SendPropertyChanging();
					this._AddTime = value;
					this.SendPropertyChanged("AddTime");
					this.OnAddTimeChanged();
				}
			}
		}
		
		[Column(Storage="_HostAddress", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string HostAddress
		{
			get
			{
				return this._HostAddress;
			}
			set
			{
				if ((this._HostAddress != value))
				{
					this.OnHostAddressChanging(value);
					this.SendPropertyChanging();
					this._HostAddress = value;
					this.SendPropertyChanged("HostAddress");
					this.OnHostAddressChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.NSD_MapData")]
	public partial class NSD_MapData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _UID;
		
		private string _Query;
		
		private System.DateTime _CompleteTime;
		
		private string _HostAddress;
		
		private byte _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnQueryChanging(string value);
    partial void OnQueryChanged();
    partial void OnCompleteTimeChanging(System.DateTime value);
    partial void OnCompleteTimeChanged();
    partial void OnHostAddressChanging(string value);
    partial void OnHostAddressChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public NSD_MapData()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_UID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[Column(Storage="_Query", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Query
		{
			get
			{
				return this._Query;
			}
			set
			{
				if ((this._Query != value))
				{
					this.OnQueryChanging(value);
					this.SendPropertyChanging();
					this._Query = value;
					this.SendPropertyChanged("Query");
					this.OnQueryChanged();
				}
			}
		}
		
		[Column(Storage="_CompleteTime", DbType="DateTime NOT NULL")]
		public System.DateTime CompleteTime
		{
			get
			{
				return this._CompleteTime;
			}
			set
			{
				if ((this._CompleteTime != value))
				{
					this.OnCompleteTimeChanging(value);
					this.SendPropertyChanging();
					this._CompleteTime = value;
					this.SendPropertyChanged("CompleteTime");
					this.OnCompleteTimeChanged();
				}
			}
		}
		
		[Column(Storage="_HostAddress", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string HostAddress
		{
			get
			{
				return this._HostAddress;
			}
			set
			{
				if ((this._HostAddress != value))
				{
					this.OnHostAddressChanging(value);
					this.SendPropertyChanging();
					this._HostAddress = value;
					this.SendPropertyChanged("HostAddress");
					this.OnHostAddressChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.NSD_Models")]
	public partial class NSD_Models
	{
		
		private int _ID;
		
		private int _BrandID;
		
		private string _ModelName;
		
		private byte _Status;
		
		public NSD_Models()
		{
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_BrandID", DbType="Int NOT NULL")]
		public int BrandID
		{
			get
			{
				return this._BrandID;
			}
			set
			{
				if ((this._BrandID != value))
				{
					this._BrandID = value;
				}
			}
		}
		
		[Column(Storage="_ModelName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string ModelName
		{
			get
			{
				return this._ModelName;
			}
			set
			{
				if ((this._ModelName != value))
				{
					this._ModelName = value;
				}
			}
		}
		
		[Column(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.NSD_Score")]
	public partial class NSD_Score : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _UID;
		
		private int _Score;
		
		private int _Duration;
		
		private System.DateTime _FinishTime;
		
		private string _HostAddress;
		
		private byte _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnScoreChanging(int value);
    partial void OnScoreChanged();
    partial void OnDurationChanging(int value);
    partial void OnDurationChanged();
    partial void OnFinishTimeChanging(System.DateTime value);
    partial void OnFinishTimeChanged();
    partial void OnHostAddressChanging(string value);
    partial void OnHostAddressChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public NSD_Score()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_UID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[Column(Storage="_Score", DbType="Int NOT NULL")]
		public int Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[Column(Storage="_Duration", DbType="Int NOT NULL")]
		public int Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[Column(Storage="_FinishTime", DbType="DateTime NOT NULL")]
		public System.DateTime FinishTime
		{
			get
			{
				return this._FinishTime;
			}
			set
			{
				if ((this._FinishTime != value))
				{
					this.OnFinishTimeChanging(value);
					this.SendPropertyChanging();
					this._FinishTime = value;
					this.SendPropertyChanged("FinishTime");
					this.OnFinishTimeChanged();
				}
			}
		}
		
		[Column(Storage="_HostAddress", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string HostAddress
		{
			get
			{
				return this._HostAddress;
			}
			set
			{
				if ((this._HostAddress != value))
				{
					this.OnHostAddressChanging(value);
					this.SendPropertyChanging();
					this._HostAddress = value;
					this.SendPropertyChanged("HostAddress");
					this.OnHostAddressChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.R_HelloEvoque")]
	public partial class R_HelloEvoque : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _HName;
		
		private string _HTitle;
		
		private string _HPhone;
		
		private string _HEmail;
		
		private string _HProvince;
		
		private string _HCity;
		
		private string _HWay;
		
		private string _HSubscription;
		
		private string _HIp;
		
		private System.DateTime _HDate;
		
		private string _HSource;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnHNameChanging(string value);
    partial void OnHNameChanged();
    partial void OnHTitleChanging(string value);
    partial void OnHTitleChanged();
    partial void OnHPhoneChanging(string value);
    partial void OnHPhoneChanged();
    partial void OnHEmailChanging(string value);
    partial void OnHEmailChanged();
    partial void OnHProvinceChanging(string value);
    partial void OnHProvinceChanged();
    partial void OnHCityChanging(string value);
    partial void OnHCityChanged();
    partial void OnHWayChanging(string value);
    partial void OnHWayChanged();
    partial void OnHSubscriptionChanging(string value);
    partial void OnHSubscriptionChanged();
    partial void OnHIpChanging(string value);
    partial void OnHIpChanged();
    partial void OnHDateChanging(System.DateTime value);
    partial void OnHDateChanged();
    partial void OnHSourceChanging(string value);
    partial void OnHSourceChanged();
    #endregion
		
		public R_HelloEvoque()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_HName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string HName
		{
			get
			{
				return this._HName;
			}
			set
			{
				if ((this._HName != value))
				{
					this.OnHNameChanging(value);
					this.SendPropertyChanging();
					this._HName = value;
					this.SendPropertyChanged("HName");
					this.OnHNameChanged();
				}
			}
		}
		
		[Column(Storage="_HTitle", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HTitle
		{
			get
			{
				return this._HTitle;
			}
			set
			{
				if ((this._HTitle != value))
				{
					this.OnHTitleChanging(value);
					this.SendPropertyChanging();
					this._HTitle = value;
					this.SendPropertyChanged("HTitle");
					this.OnHTitleChanged();
				}
			}
		}
		
		[Column(Storage="_HPhone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string HPhone
		{
			get
			{
				return this._HPhone;
			}
			set
			{
				if ((this._HPhone != value))
				{
					this.OnHPhoneChanging(value);
					this.SendPropertyChanging();
					this._HPhone = value;
					this.SendPropertyChanged("HPhone");
					this.OnHPhoneChanged();
				}
			}
		}
		
		[Column(Storage="_HEmail", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string HEmail
		{
			get
			{
				return this._HEmail;
			}
			set
			{
				if ((this._HEmail != value))
				{
					this.OnHEmailChanging(value);
					this.SendPropertyChanging();
					this._HEmail = value;
					this.SendPropertyChanged("HEmail");
					this.OnHEmailChanged();
				}
			}
		}
		
		[Column(Storage="_HProvince", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HProvince
		{
			get
			{
				return this._HProvince;
			}
			set
			{
				if ((this._HProvince != value))
				{
					this.OnHProvinceChanging(value);
					this.SendPropertyChanging();
					this._HProvince = value;
					this.SendPropertyChanged("HProvince");
					this.OnHProvinceChanged();
				}
			}
		}
		
		[Column(Storage="_HCity", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HCity
		{
			get
			{
				return this._HCity;
			}
			set
			{
				if ((this._HCity != value))
				{
					this.OnHCityChanging(value);
					this.SendPropertyChanging();
					this._HCity = value;
					this.SendPropertyChanged("HCity");
					this.OnHCityChanged();
				}
			}
		}
		
		[Column(Storage="_HWay", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HWay
		{
			get
			{
				return this._HWay;
			}
			set
			{
				if ((this._HWay != value))
				{
					this.OnHWayChanging(value);
					this.SendPropertyChanging();
					this._HWay = value;
					this.SendPropertyChanged("HWay");
					this.OnHWayChanged();
				}
			}
		}
		
		[Column(Storage="_HSubscription", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string HSubscription
		{
			get
			{
				return this._HSubscription;
			}
			set
			{
				if ((this._HSubscription != value))
				{
					this.OnHSubscriptionChanging(value);
					this.SendPropertyChanging();
					this._HSubscription = value;
					this.SendPropertyChanged("HSubscription");
					this.OnHSubscriptionChanged();
				}
			}
		}
		
		[Column(Storage="_HIp", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string HIp
		{
			get
			{
				return this._HIp;
			}
			set
			{
				if ((this._HIp != value))
				{
					this.OnHIpChanging(value);
					this.SendPropertyChanging();
					this._HIp = value;
					this.SendPropertyChanged("HIp");
					this.OnHIpChanged();
				}
			}
		}
		
		[Column(Storage="_HDate", DbType="DateTime NOT NULL")]
		public System.DateTime HDate
		{
			get
			{
				return this._HDate;
			}
			set
			{
				if ((this._HDate != value))
				{
					this.OnHDateChanging(value);
					this.SendPropertyChanging();
					this._HDate = value;
					this.SendPropertyChanged("HDate");
					this.OnHDateChanged();
				}
			}
		}
		
		[Column(Storage="_HSource", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string HSource
		{
			get
			{
				return this._HSource;
			}
			set
			{
				if ((this._HSource != value))
				{
					this.OnHSourceChanging(value);
					this.SendPropertyChanging();
					this._HSource = value;
					this.SendPropertyChanged("HSource");
					this.OnHSourceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
